name: CI/CD Pileline

on:
  push:
    branches:
      - feature-branch
  pull_request:
    branches:
      - feature-branch

jobs:
  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Python 3.12
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.12'

  #   - name: Install dependencies
  #     run: |
  #       python -m venv .venv
  #       source .venv/bin/activate
  #       cd backend
  #       pip install -r requirements.txt

  #   - name: Run tests FastAPI
  #     run: |
  #       source .venv/bin/activate
  #       pytest 
    
  #   - name: Setup tests NextJS
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '18'

  #   - name: Install dependencies NextJS
  #     run: |
  #       cd frontend
  #       npm install
    
  #   - name: Run tests NextJS
  #     run: |
  #       cd frontend
  #       npm run test
  
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Backend
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          registry: docker.io
          file: backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demo-exam-app:backend

      - name: Build and Push Frontend
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          registry: docker.io
          file: frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demo-exam-app:frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to AWS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user

            echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

            docker ps -aq | xargs -r docker stop | xargs -r docker rm

            docker pull ${{ secrets.DOCKER_USERNAME }}/demo-exam-app:backend
            docker pull ${{ secrets.DOCKER_USERNAME }}/demo-exam-app:frontend

            docker run -d -p 8000:8000 --name backend ${{ secrets.DOCKER_USERNAME }}/demo-exam-app:backend
            docker run -d -p 3000:3000 --name frontend ${{ secrets.DOCKER_USERNAME }}/demo-exam-app:frontend