name: Test and Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          cd backend
          pip install -r requirements.txt
          pip install flake8 black isort pytest-cov

      - name: Lint with flake8
        run: |
          source .venv/bin/activate
          cd backend
          echo "Running flake8 critical errors check..."
          flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics || echo "Critical errors found"
          echo "Running flake8 style check..."
          flake8 app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check code formatting with black
        run: |
          source .venv/bin/activate
          cd backend
          echo "Checking code formatting with black..."
          black --check app || echo "Code formatting issues found"

      - name: Check import sorting with isort
        run: |
          source .venv/bin/activate
          cd backend
          echo "Checking import sorting with isort..."
          isort --check-only app || echo "Import sorting issues found"

      - name: Run tests with pytest
        run: |
          source .venv/bin/activate
          cd backend
          pytest app/test/ -v --cov=app --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage
        continue-on-error: true

  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci --force

      - name: Run ESLint
        run: |
          cd frontend
          npm run lint || echo "ESLint completed with warnings"

      - name: Run TypeScript type check
        run: |
          cd frontend
          echo "Running TypeScript type check..."
          npx tsc --noEmit || echo "TypeScript type check completed with warnings"

      - name: Run tests
        run: |
          cd frontend
          npm run test -- --coverage --watchAll=false --passWithNoTests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
        continue-on-error: true

  # build-test:
  #   runs-on: ubuntu-latest
  #   needs: [backend-test, frontend-test]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Test Docker builds
  #       run: |
  #         docker build -t test-backend ./backend
  #         docker build -t test-frontend ./frontend
  #         echo "Docker builds successful"
